name: Deploy Docs (sans re-commit dans main)

on:
  push:
    branches: [main]

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: 🛠️ Installer les dépendances via script Python
        run: python resources/auto/subs/install_deps.py

      - name: Check semantic-release version
        run: semantic-release --version

      - name: 🔍 Vérifie les commits depuis le dernier tag
        run: |
          echo "Dernier tag : $(git describe --tags --abbrev=0)"
          echo "Commits depuis le dernier tag :"
          git log --oneline $(git describe --tags --abbrev=0)..HEAD

      # - name: Run semantic-release
      #   env:
      #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      #     # Calcule la nouvelle version si mot semantic

      #     # -v = verbose -- Max : -vvv = very very verbose
      #     semantic-release version

      #     semantic-release publish

      - name: Run python-semantic-release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python -m semantic_release version
          python -m semantic_release publish

      # - name: 🔢 Affiche la version générée
      #   run: git describe --tags --abbrev=0

      - name: 🔢 Affiche la version générée (avec le commit)
        run: git show $(git describe --tags --abbrev=0) --oneline

      # - name: 📦 List installed packages
      #   run: pip freeze

      - name: Génére CHANGELOG.md personnalisé
        run: python resources/auto/gen_changelog.py

      - name: 📋 Génère deploy_info.md
        run: python resources/auto/gen_deploy_info.py --mode manual

      - name: 📝 Génère todo.md
        run: python resources/auto/gen_todos.py

      # Récupération du rapport hebdomadaire le plus récent depuis gh-pages/reports
      - name: 🧲 Récupérer le dernier rapport hebdomadaire depuis gh-pages/reports
        run: python resources/auto/subs/get_reports.py --files hebdo.md
        # Cette étape assure que nous utilisons toujours le rapport hebdo le plus récent

      - name: 🌐 Prépare le fichier CNAME
        run: echo "pymox.fr" > docs/CNAME

      - name: Generate docs/versions.json
        run: |
          TAG=$(git describe --tags --abbrev=0)
          echo "{\"version\": \"${TAG}\"}" > docs/versions.json

      - name: 🚀 Déploie vers gh-pages
        run: mkdocs gh-deploy --force

      - name: 🧲 Pousse les rapports dans 🌿 gh-pages/reports
        # 🧭 Note sur le double déploiement qu'engendre ce script :
        # Cette étape pousse les rapports markdown dans gh-pages/reports/
        # Elle déclenche un second déploiement GitHub Pages car chaque push sur gh-pages est traité.
        # Ce comportement est volontaire : le premier déploiement publie le site HTML via MkDocs,
        # le second enrichit la branche avec les rapports techniques en markdown.
        # Les deux sont nécessaires pour un site complet et à jour.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          FILES_TO_SAVE: "CHANGELOG.md hebdo.md versions.json todo.md"
        run: |
          python resources/auto/subs/push_reports.py \
            --files ${FILES_TO_SAVE} \
            --keep-originals \
            --ghref ${{ github.ref_name }}
